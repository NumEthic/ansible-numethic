---
- name: Install a list of needed packages
  apt:
    pkg:
    - unzip
    - git
    - php-curl
    - php-zip
    - php-mysql
    - php-xml
    - php-mbstring
    - php-gd
    - php-intl
    - php-xmlrpc
    - php-soap
- name: Build database and user dict
  set_fact:
    moodle_db:
      - name: "{{ moodle_db_name }}"
        encoding: utf8mb4
        collation: utf8mb4_unicode_ci
    moodle_user:
      - name: "{{ moodle_db_user }}"
        password: "{{ moodle_db_pwd }}"
        priv: "{{ moodle_db_name }}.*:ALL"

- name: Append moodle database
  set_fact:
    mysql_databases: "{{ mysql_databases + [ moodle_db ] }}"
    mysql_users: "{{ mysql_users + [ moodle_user ] }}"

- name: Build nginx config dict
  set_fact:
    moodle_server_http:
      listen:
        listen_localhost:
          port: 80
      server_name: "{{ moodle_domain }}"
      root: /var/www/html/letsencrypt/
      web_server:
        locations:
          letsencrypt:
            location: /.well-known/acme-challenge
            try_files: $uri $uri/ =404
          main_site:
            location: /
            custom_options:
              - "rewrite ^ https://{{ moodle_domain }}$request_uri? permanent;"
    moodle_server_https:
      listen:
        listen_ssl:
          port: 443
          ssl: true
      ssl:
        cert: "/etc/letsencrypt/live/{{ moodle_domain }}/fullchain.pem"
        key: "/etc/letsencrypt/live/{{ moodle_domain }}/privkey.pem"
      server_name: "{{ moodle_domain }}"
      root: /var/www/html/moodle
      custom_options:
        - index index.php;
      web_server:
        locations:
          main_site:
            location: ~ [^/]\.php(/|$)
            custom_options:
              - fastcgi_split_path_info ^(.+\.php)(/.+)$;
              - fastcgi_index index.php;
              - "fastcgi_pass unix:/run/php/php-fpm.sock;"
              - include fastcgi_params;
              - fastcgi_param PATH_INFO $fastcgi_path_info;
              - fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

- name: Append nginx moodle conf
  set_fact:
    nginx_servers: "{{ nginx_servers | combine({'moodle_http': moodle_server_http, 'moodle_https': moodle_server_https}) }}"

- name: print nginx_config
  ansible.builtin.debug:
    msg: "{{ nginx_servers }}"

- name: Check moodle folder exists
  stat:
    path: /var/www/html/moodle
  register: moodle_dir
- name: Download moodle 3.11 with git
  ansible.builtin.shell: sudo sh -c 'git clone git://git.moodle.org/moodle.git && cd moodle && git branch -a && git branch --track MOODLE_311_STABLE origin/MOODLE_311_STABLE && git checkout MOODLE_311_STABLE'
  args:
    chdir: /var/www/html
  when: not moodle_dir.stat.exists

- name: Ensure moodle folder exists and has the correct permissions
  file:
    path: /var/www/html/moodle
    state: directory
    group: nginx
    owner: nginx
    recurse: yes

- name: Ensure moodledata folder exists and has the correct permissions
  file:
    path: /var/www/html/moodledata
    state: directory
    mode: "0775"
    group: nginx
    owner: nginx

- name: "Copy selfsigned cert to have a working nginx server to ask a legitimate cert"
  shell: "mkdir -p /etc/letsencrypt/live/{{ moodle_domain }}; cp /etc/ssl/private/selfsigned.key /etc/letsencrypt/live/{{ moodle_domain }}/privkey.pem; cp /etc/ssl/certs/selfsigned.crt /etc/letsencrypt/live/{{ moodle_domain }}/fullchain.pem; touch /etc/letsencrypt/live/{{ moodle_domain }}/selfsigned;"
  args:
    creates: "/etc/letsencrypt/live/{{ moodle_domain }}/privkey.pem"
